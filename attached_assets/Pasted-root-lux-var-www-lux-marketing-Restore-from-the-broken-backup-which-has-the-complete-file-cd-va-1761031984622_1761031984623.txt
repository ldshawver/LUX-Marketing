root@lux:/var/www/lux-marketing# # Restore from the broken backup which has the complete file
cd /var/www/lux-marketing
cp routes.py.broken routes.py

# Now properly remove ONLY the second duplicate (lines 299-336 approximately)
# We need to keep everything up to and including the first export_contacts complete function

# Let's find where the first export_contacts function ends
awk '/^@main_bp\.route.*\/contacts\/export/,/^@main_bp\.route|^def [a-z_]+.*:/{if(/^@main_bp\.route/ && NR>1){exit}} {print NR": "$0}' routes.py | tail -20

# Simpler approach - let's use Python to fix this properly
cat > fix_routes_duplicate.py << 'PYFIX'
with open('routes.py', 'r') as f:
    lines = f.readlines()

# Find all occurrences of export_contacts
export_lines = []
for i, line in enumerate(lines):
    if 'def export_contacts():' in line:
        export_lines.append(i)

print(f"Found export_contacts at lines: {export_lines}")

if len(export_lines) > 1:
    # Keep everything up to and including the first complete export_contacts
    # Remove from the second @main_bp.route('/contacts/export') onwards
    
    # Find the route decorator before the second function
    second_func_line = export_lines[1]
    # Go back to find the @main_bp.route decorator (usually 2 lines before)
    cut_line = second_func_line - 2
    
    # Keep only up to the line before the duplicate starts
    lines = lines[:cut_line]
    
    with open('routes.py', 'w') as f:
        f.writelines(lines)
    
    print(f"✓ Removed duplicate starting at line {cut_line}")
else:
    print("No duplicate found")
PYFIX

python3 fix_routes_duplicate.py

# Verify
grep -c "def export_contacts" routes.py

systemctl status lux-marketing.service --no-pager | head -15
243: @login_required
244: def newsletter_archive():
245:     """Newsletter archive"""
246:     flash('Newsletter archive coming soon!', 'info')
247:     return redirect(url_for('main.dashboard'))
248: 
249: @main_bp.route('/automation/templates')
250: @login_required
251: def automation_templates():
252:     """Automation templates"""
253:     flash('Automation templates coming soon!', 'info')
254:     return redirect(url_for('main.automation_dashboard'))
255: 
256: @main_bp.route('/automation/analytics')
257: @login_required
258: def automation_analytics():
259:     """Automation analytics"""
260:     flash('Automation analytics coming soon!', 'info')
261:     return redirect(url_for('main.automation_dashboard'))
262: 
Found export_contacts at lines: [264, 300]
✓ Removed duplicate starting at line 298
1
    response.headers['Content-Disposition'] = 'attachment; filename=contacts.csv'
    response.headers['Content-Type'] = 'text/csv'
    
    return response

● lux-marketing.service - LUX Marketing Automation Platform
     Loaded: loaded (/etc/systemd/system/lux-marketing.service; enabled; preset: enabled)
     Active: active (running) since Tue 2025-10-21 07:32:37 UTC; 3s ago
   Main PID: 1330 (gunicorn)
      Tasks: 6 (limit: 9517)
     Memory: 81.2M
        CPU: 1.033s
     CGroup: /system.slice/lux-marketing.service
             ├─1330 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             ├─1335 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             ├─1336 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             ├─1337 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             └─1338 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app

Oct 21 07:32:38 lux gunicorn[1330]: INFO:ai_agent:LUX AI Agent initialized successfully