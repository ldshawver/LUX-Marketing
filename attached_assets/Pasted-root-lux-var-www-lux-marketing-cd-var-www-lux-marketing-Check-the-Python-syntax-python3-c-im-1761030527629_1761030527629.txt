root@lux:/var/www/lux-marketing# cd /var/www/lux-marketing

# Check the Python syntax
python3 -c "import routes" 2>&1

# Or just check the error in the logs
journalctl -u lux-marketing.service -n 30 --no-pager | grep -A 10 "Error\|Traceback"
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/var/www/lux-marketing/routes.py", line 4, in <module>
    from app import db
  File "/var/www/lux-marketing/app.py", line 6, in <module>
    from flask_wtf.csrf import CSRFProtect
ModuleNotFoundError: No module named 'flask_wtf'
Oct 21 07:07:17 lux gunicorn[940]: SyntaxError: unexpected character after line continuation character
Oct 21 07:07:17 lux systemd[1]: lux-marketing.service: Main process exited, code=exited, status=1/FAILURE
Oct 21 07:07:17 lux systemd[1]: lux-marketing.service: Failed with result 'exit-code'.
Oct 21 07:07:27 lux systemd[1]: lux-marketing.service: Scheduled restart job, restart counter is at 8.
Oct 21 07:07:27 lux systemd[1]: Stopped lux-marketing.service - LUX Marketing Automation Platform.
Oct 21 07:07:27 lux systemd[1]: Started lux-marketing.service - LUX Marketing Automation Platform.
Oct 21 07:07:28 lux gunicorn[946]: INFO:ai_agent:LUX AI Agent initialized successfully
Oct 21 07:07:29 lux gunicorn[946]: DEBUG:tzlocal:/etc/timezone found, contents:
Oct 21 07:07:29 lux gunicorn[946]:  Etc/UTC
Oct 21 07:07:29 lux gunicorn[946]: DEBUG:tzlocal:/etc/localtime found
Oct 21 07:07:29 lux gunicorn[946]: DEBUG:tzlocal:2 found:
root@lux:/var/www/lux-marketing# cd /var/www/lux-marketing

# First, restore from backup to fix the syntax error
cp routes.py.backup routes.py

# Install the missing flask-wtf package
source venv/bin/activate
pip install flask-wtf
deactivate

# Now properly fix the imports in routes.py using a Python script
cat > fix_routes_imports.py << 'PYFIX'
# Read the file
with open('routes.py', 'r') as f:
    lines = f.readlines()

# Find the line with "from flask import"
for i, line in enumerate(lines):
    if line.startswith('from flask import'):
        # Add request, flash, session if not present
        if 'request' not in line:
            lines[i] = line.rstrip() + ', request, flash, session\n'
        break

# Add import logging at the top (after the first line which is ai_agent import)
lines.insert(0, 'import logging\n')

# Add logger after imports (find main_bp line)
for i, line in enumerate(lines):
    if line.startswith('main_bp = Blueprint'):
        lines.insert(i, 'logger = logging.getLogger(__name__)\n')
        lines.insert(i, '\n')
        break

# Update the models import to include new models
for i, line in enumerate(lines):
    if 'from models import' in line and 'Campaign' in line:
        lines[i] = 'from models import Campaign, Contact, CampaignRecipient, EmailTemplate, Automation, Segment, ABTest, BrandKit, EmailTracking\n'
        break

# Write back
with open('routes.py', 'w') as f:
    f.writelines(lines)

print("✓ Routes imports fixed properly")
PYFIX

# Run the fix
echo "Service should be running now!"e --no-pager | head -20
Requirement already satisfied: flask-wtf in ./venv/lib/python3.11/site-packages (1.2.2)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (from flask-wtf) (3.1.2)
Requirement already satisfied: itsdangerous in ./venv/lib/python3.11/site-packages (from flask-wtf) (2.2.0)
Requirement already satisfied: wtforms in ./venv/lib/python3.11/site-packages (from flask-wtf) (3.2.1)
Requirement already satisfied: blinker>=1.9.0 in ./venv/lib/python3.11/site-packages (from flask->flask-wtf) (1.9.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask->flask-wtf) (8.3.0)
Requirement already satisfied: jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask->flask-wtf) (3.1.6)
Requirement already satisfied: markupsafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from flask->flask-wtf) (3.0.3)
Requirement already satisfied: werkzeug>=3.1.0 in ./venv/lib/python3.11/site-packages (from flask->flask-wtf) (3.1.3)
✓ Routes imports fixed properly
✓ Syntax OK
● lux-marketing.service - LUX Marketing Automation Platform
     Loaded: loaded (/etc/systemd/system/lux-marketing.service; enabled; preset: enabled)
     Active: active (running) since Tue 2025-10-21 07:08:29 UTC; 3s ago
   Main PID: 987 (gunicorn)
      Tasks: 6 (limit: 9517)
     Memory: 62.1M
        CPU: 499ms
     CGroup: /system.slice/lux-marketing.service
             ├─987 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             ├─992 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             ├─993 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             ├─994 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app
             └─995 /var/www/lux-marketing/venv/bin/python3 /var/www/lux-marketing/venv/bin/gunicorn --config /var/www/lux-marketing/gunicorn.conf.py wsgi:app

Oct 21 07:08:29 lux gunicorn[987]: INFO:ai_agent:LUX AI Agent initialized successfully
Oct 21 07:08:29 lux gunicorn[987]: DEBUG:tzlocal:/etc/timezone found, contents:
Oct 21 07:08:29 lux gunicorn[987]:  Etc/UTC
Oct 21 07:08:29 lux gunicorn[987]: DEBUG:tzlocal:/etc/localtime found
Oct 21 07:08:29 lux gunicorn[987]: DEBUG:tzlocal:2 found:
Oct 21 07:08:29 lux gunicorn[987]:  {'/etc/timezone': 'Etc/UTC', '/etc/localtime is a symlink to': 'Etc/UTC'}

Service should be running now!